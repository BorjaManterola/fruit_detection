[1/10] Performing build step for 'bootloader'
[1/1] cd /home/borjajuegos9/esp/projects_tf/fruit_detection/build/bootloader/esp-idf/esptool_py && /home/borjajuegos9/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python /home/borjajuegos9/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/borjajuegos9/esp/projects_tf/fruit_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x6f50 bytes. 0xb0 bytes (1%) free.
[2/8] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/person_detect_model_data.cc.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable person_detection.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/borjajuegos9/esp/projects_tf/fruit_detection/build/person_detection.bin
[7/8] cd /home/borjajuegos9/esp/projects_tf/fruit_detection/build/esp-idf/esptool_py && /home/borjajuegos9/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python /home/borjajuegos9/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/borjajuegos9/esp/projects_tf/fruit_detection/build/partition_table/partition-table.bin /home/borjajuegos9/esp/projects_tf/fruit_detection/build/person_detection.bin
person_detection.bin binary size 0x1f6310 bytes. Smallest app partition is 0x300000 bytes. 0x109cf0 bytes (35%) free.
[7/8] cd /home/borjajuegos9/esp/idf/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/borjajuegos9/esp/idf/esp-idf -D "SERIAL_TOOL=/home/borjajuegos9/esp/idf-tools/python_env/idf5.4_py3.10_env/bin/python;;/home/borjajuegos9/esp/idf/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/borjajuegos9/esp/projects_tf/fruit_detection/build -P /home/borjajuegos9/esp/idf/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x1000 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev3
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, BLK3 partially reserved, Coding Scheme 3/4
Crystal is 40MHz
MAC: 84:0d:8e:19:b1:44
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 4MB
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00206fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 28496 bytes to 17354...
Writing at 0x00001000... (50 %)
Writing at 0x00007a48... (100 %)
Wrote 28496 bytes (17354 compressed) at 0x00001000 in 0.7 seconds (effective 341.7 kbit/s)...
Hash of data verified.
Compressed 2056976 bytes to 1401755...
Writing at 0x00010000... (1 %)
Writing at 0x0001d3ec... (2 %)
Writing at 0x00021dd6... (3 %)
Writing at 0x00026c4f... (4 %)
Writing at 0x0002c919... (5 %)
Writing at 0x00031ff5... (6 %)
Writing at 0x0003808c... (8 %)
Writing at 0x0003df68... (9 %)
Writing at 0x00043e76... (10 %)
Writing at 0x00049ba8... (11 %)
Writing at 0x0004f8f1... (12 %)
Writing at 0x00055523... (13 %)
Writing at 0x0005b439... (15 %)
Writing at 0x00060e76... (16 %)
Writing at 0x0006682a... (17 %)
Writing at 0x0006c4a9... (18 %)
Writing at 0x0007206a... (19 %)
Writing at 0x00077e03... (20 %)
Writing at 0x0007d9bb... (22 %)
Writing at 0x00083671... (23 %)
Writing at 0x00089223... (24 %)
Writing at 0x0008e9d6... (25 %)
Writing at 0x00094e65... (26 %)
Writing at 0x0009adc4... (27 %)
Writing at 0x000a05fb... (29 %)
Writing at 0x000a5ff6... (30 %)
Writing at 0x000abc28... (31 %)
Writing at 0x000b15f1... (32 %)
Writing at 0x000b71f3... (33 %)
Writing at 0x000bce6a... (34 %)
Writing at 0x000c274c... (36 %)
Writing at 0x000c8485... (37 %)
Writing at 0x000cdb84... (38 %)
Writing at 0x000d3210... (39 %)
Writing at 0x000d8fc1... (40 %)
Writing at 0x000deb00... (41 %)
Writing at 0x000e43a1... (43 %)
Writing at 0x000ea063... (44 %)
Writing at 0x000f02d3... (45 %)
Writing at 0x000f6300... (46 %)
Writing at 0x000fbf6a... (47 %)
Writing at 0x00101367... (48 %)
Writing at 0x00106f62... (50 %)
Writing at 0x0010c845... (51 %)
Writing at 0x001124a3... (52 %)
Writing at 0x00117fb1... (53 %)
Writing at 0x0011df21... (54 %)
Writing at 0x001239e3... (55 %)
Writing at 0x00129af4... (56 %)
Writing at 0x0012f842... (58 %)
Writing at 0x0013586d... (59 %)
Writing at 0x0013b834... (60 %)
Writing at 0x001413f5... (61 %)
Writing at 0x00146c07... (62 %)
Writing at 0x0014c780... (63 %)
Writing at 0x00152447... (65 %)
Writing at 0x001581a4... (66 %)
Writing at 0x0015de01... (67 %)
Writing at 0x00163758... (68 %)
Writing at 0x0016925d... (69 %)
Writing at 0x0016ec88... (70 %)
Writing at 0x00174fb4... (72 %)
Writing at 0x0017b007... (73 %)
Writing at 0x001806e7... (74 %)
Writing at 0x00186414... (75 %)
Writing at 0x0018c16c... (76 %)
Writing at 0x00191cfb... (77 %)
Writing at 0x00197956... (79 %)
Writing at 0x0019d2b1... (80 %)
Writing at 0x001a32ac... (81 %)
Writing at 0x001a9029... (82 %)
Writing at 0x001ae7a5... (83 %)
Writing at 0x001b3dd6... (84 %)
Writing at 0x001b8bb5... (86 %)
Writing at 0x001be8c1... (87 %)
Writing at 0x001c75c8... (88 %)
Writing at 0x001ccd99... (89 %)
Writing at 0x001d284c... (90 %)
Writing at 0x001d7d5e... (91 %)
Writing at 0x001dcfdc... (93 %)
Writing at 0x001e2217... (94 %)
Writing at 0x001e7a83... (95 %)
Writing at 0x001eea79... (96 %)
Writing at 0x001f3fe0... (97 %)
Writing at 0x001fcee5... (98 %)
Writing at 0x00202ef7... (100 %)
Wrote 2056976 bytes (1401755 compressed) at 0x00010000 in 31.5 seconds (effective 522.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.0 seconds (effective 629.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
